# This is a reusable workflow to mark new PRs as in need of review
name: "New Pull Request - Triage Needed"

on:
  workflow_call:

permissions:
  pull-requests: write
  issues: write

jobs:
  PR-TRIAGE-START:
    runs-on: ubuntu-latest
    steps:
      # Post Thanks/Awaiting Review comment:
      - name: Post Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "ðŸ‘‹ Thanks for the Pull Request! One of our code reviewers will check this out as soon as possible."
            })
      # Add 'Needs Review' label:
      - name: Add Triage Label
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Needs Review']
            })
      # Update 'Needs Review' label:
      - name: UPDATE Triage Label
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.updateLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Needs Review',
              color: 'ff69b4',
              description: 'In need of review by a code admin'
            })
      # Check for Outside Contributors:
      - name: Check Org Membership
        uses: actions/github-script@v7
        with:
          script: |
            const org = 'SessionsBot';
            const username = context.payload.pull_request.user.login;

            try {
              await github.rest.orgs.checkMembershipForUser({
                org,
                username
              });
              console.log(`${username} is a member of ${org}!`);
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['Organization Contributor']
              });
            } catch (error) {
            // Check for Non-Member:
            if (error.status === 404) {
              console.log(`${username} is NOT a member of ${org}`);
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['Outside Contributor']
              });
            } else {
              // Let the workflow fail if it's a different error
              throw error; 
            }
            
            }
